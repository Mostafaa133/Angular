{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserUpdateComponent_form_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"p\", 15);\n    i0.ɵɵtext(2, \"User updated successfully\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserUpdateComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function UserUpdateComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const _r2 = i0.ɵɵreference(6);\n      const _r3 = i0.ɵɵreference(11);\n      const _r4 = i0.ɵɵreference(16);\n      const _r5 = i0.ɵɵreference(21);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.Add(_r2.value, _r3.value, _r4.value, _r5.value));\n    });\n    i0.ɵɵtemplate(1, UserUpdateComponent_form_0_div_1_Template, 3, 0, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"label\", 4);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 5, 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n    i0.ɵɵtext(9, \"Age\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 7, 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 4);\n    i0.ɵɵtext(14, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 9, 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 4);\n    i0.ɵɵtext(19, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 7, 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 12);\n    i0.ɵɵelement(23, \"input\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isUpdated);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.User.name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.User.age);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.User.email);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.User.phone);\n  }\n}\nexport class UserUpdateComponent {\n  constructor(myRoute, myService) {\n    this.myService = myService;\n    this.isUpdated = false;\n    this.ID = myRoute.snapshot.params[\"id\"];\n  }\n  ngOnInit() {\n    this.myService.GetUserByID(this.ID).subscribe({\n      next: data => {\n        this.User = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  Add(name, age, email, phone) {\n    let newUser = {\n      name,\n      age,\n      email,\n      phone\n    };\n    this.myService.UpdateUser(this.ID, newUser).subscribe();\n    this.isUpdated = true;\n  }\n}\nUserUpdateComponent.ɵfac = function UserUpdateComponent_Factory(t) {\n  return new (t || UserUpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserService));\n};\nUserUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserUpdateComponent,\n  selectors: [[\"app-user-update\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"form w-50 m-auto text-center mt-5 \", 3, \"ngSubmit\", 4, \"ngIf\"], [1, \"form\", \"w-50\", \"m-auto\", \"text-center\", \"mt-5\", 3, \"ngSubmit\"], [\"class\", \"m-auto mt-2\", 4, \"ngIf\"], [1, \"form-group\", \"d-flex\", \"m-2\"], [1, \"col-3\"], [\"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"name\", \"\"], [\"type\", \"number\", 1, \"form-control\", 3, \"value\"], [\"age\", \"\"], [\"type\", \"email\", 1, \"form-control\", 3, \"value\"], [\"email\", \"\"], [\"phone\", \"\"], [1, \"form-group\", \"d-flex\", \"m-2\", \"m-auto\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\"], [1, \"m-auto\", \"mt-2\"], [1, \"alert\", \"alert-success\", \"p-2\"]],\n  template: function UserUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UserUpdateComponent_form_0_Template, 24, 5, \"form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.User);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;IACEA,+BAA4C;IACPA,yCAAyB;IAAAA,iBAAI;;;;;;IAFpEA,+BAAgI;IAAjEA;MAAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA,OAAYA,qEAAmD;IAAA,EAAC;IAC7HA,2EAEM;IACNA,8BAAoC;IACbA,oBAAI;IAAAA,iBAAQ;IACjCA,8BAAqE;IACvEA,iBAAM;IACNA,8BAAmC;IACZA,mBAAG;IAAAA,iBAAQ;IAChCA,+BAAqE;IACvEA,iBAAM;IACNA,+BAAmC;IACZA,sBAAK;IAAAA,iBAAQ;IAClCA,gCAAwE;IAC1EA,iBAAM;IACNA,+BAAmC;IACZA,sBAAK;IAAAA,iBAAQ;IAClCA,gCAAyE;IAC3EA,iBAAM;IACNA,gCAAiE;IAC/DA,6BAAsD;IACxDA,iBAAM;;;;IArBoBA,eAAe;IAAfA,uCAAe;IAKLA,eAAqB;IAArBA,mDAAqB;IAItBA,eAAoB;IAApBA,kDAAoB;IAIlBA,eAAsB;IAAtBA,oDAAsB;IAItBA,eAAsB;IAAtBA,oDAAsB;;;ACR7D,OAAM,MAAOC,mBAAmB;EAI9BC,YAAYC,OAAsB,EAAQC,SAAsB;IAAtB,cAAS,GAATA,SAAS;IAHnD,cAAS,GAAS,KAAK;IAIrB,IAAI,CAACC,EAAE,GAAGF,OAAO,CAACG,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;EACzC;EACAC,QAAQ;IAEN,IAAI,CAACJ,SAAS,CAACK,WAAW,CAAC,IAAI,CAACJ,EAAE,CAAC,CAACK,SAAS,CAC3C;MACEC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACC,IAAI,GAAGD,IAAI;MAClB,CAAC;MACDE,KAAK,EAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAA;KAC/B,CACF;EACH;EAEAG,GAAG,CAACC,IAAQ,EAACC,GAAO,EAAEC,KAAS,EAAEC,KAAS;IACxC,IAAIC,OAAO,GAAG;MAACJ,IAAI;MAAEC,GAAG;MAAEC,KAAK;MAAEC;IAAK,CAAC;IACvC,IAAI,CAAClB,SAAS,CAACoB,UAAU,CAAC,IAAI,CAACnB,EAAE,EAACkB,OAAO,CAAC,CAACb,SAAS,EAAE;IACtD,IAAI,CAACe,SAAS,GAAG,IAAI;EACvB;;AAvBWxB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVhC9B,uEAuBO;;;MAvBAA,+BAAU","names":["i0","UserUpdateComponent","constructor","myRoute","myService","ID","snapshot","params","ngOnInit","GetUserByID","subscribe","next","data","User","error","err","console","log","Add","name","age","email","phone","newUser","UpdateUser","isUpdated","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\mosta\\Downloads\\Angular-main\\Day5\\src\\app\\Components\\user-update\\user-update.component.html","C:\\Users\\mosta\\Downloads\\Angular-main\\Day5\\src\\app\\Components\\user-update\\user-update.component.ts"],"sourcesContent":["<form *ngIf=\"User\" class=\"form w-50 m-auto text-center mt-5 \"  (ngSubmit)=\"Add(name.value,age.value, email.value, phone.value)\">\n  <div class=\"m-auto mt-2\" *ngIf=\"isUpdated\" >\n    <p class=\"alert alert-success p-2\">User updated successfully</p>\n  </div>\n  <div class=\"form-group d-flex m-2 \">\n    <label class=\"col-3\">Name</label>\n    <input #name class=\"form-control\" value=\"{{User.name}}\" type=\"text\"/>\n  </div>\n  <div class=\"form-group d-flex m-2\">\n    <label class=\"col-3\">Age</label>\n    <input #age class=\"form-control\" value=\"{{User.age}}\" type=\"number\"/>\n  </div>\n  <div class=\"form-group d-flex m-2\">\n    <label class=\"col-3\">Email</label>\n    <input #email class=\"form-control\" value=\"{{User.email}}\" type=\"email\"/>\n  </div>\n  <div class=\"form-group d-flex m-2\">\n    <label class=\"col-3\">Phone</label>\n    <input #phone class=\"form-control\" value=\"{{User.phone}}\" type=\"number\"/>\n  </div>\n  <div class=\"form-group d-flex m-2 m-auto justify-content-center\">\n    <input class=\"btn btn-outline-success\" type=\"submit\"/>\n  </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/Services/user.service';\n\n@Component({\n  selector: 'app-user-update',\n  templateUrl: './user-update.component.html',\n  styles: [\n  ]\n})\nexport class UserUpdateComponent implements OnInit {\n  isUpdated:boolean=false;\n  ID:any;\n  User:any;\n  constructor(myRoute:ActivatedRoute,public myService: UserService){\n    this.ID = myRoute.snapshot.params[\"id\"];\n  }\n  ngOnInit(): void{\n\n    this.myService.GetUserByID(this.ID).subscribe(\n      {\n        next:(data)=>{\n          this.User = data;\n        },\n        error:(err)=>{console.log(err)}\n      }\n    );\n  }\n\n  Add(name:any,age:any, email:any, phone:any){\n    let newUser = {name, age, email, phone};\n    this.myService.UpdateUser(this.ID,newUser).subscribe();\n    this.isUpdated = true\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}